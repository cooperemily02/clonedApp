[{"/Users/aramaswamy/Desktop/my-app/src/App.js":"1","/Users/aramaswamy/Desktop/my-app/src/examples/Advanced.js":"2","/Users/aramaswamy/Desktop/my-app/src/index.js":"3","/Users/aramaswamy/Desktop/my-app/src/examples/Simple.js":"4","/Users/aramaswamy/Desktop/my-app/src/serviceWorker.js":"5"},{"size":3548,"mtime":1610083037371,"results":"6","hashOfConfig":"7"},{"size":3191,"mtime":1609994283245,"results":"8","hashOfConfig":"7"},{"size":452,"mtime":1610074774913,"results":"9","hashOfConfig":"7"},{"size":9618,"mtime":1610082991999,"results":"10","hashOfConfig":"7"},{"size":5197,"mtime":1610074822618,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"fo9amx",{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/aramaswamy/Desktop/my-app/src/App.js",["25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40"],"/Users/aramaswamy/Desktop/my-app/src/examples/Advanced.js",["41","42"],"import React, { useState, useMemo } from 'react'\n// import TinderCard from '../react-tinder-card/index'\nimport TinderCard from 'react-tinder-card'\n\nconst db = [\n  {\n    name: 'Richard Hendricks',\n    url: './img/richard.jpg'\n  },\n  {\n    name: 'Erlich Bachman',\n    url: './img/erlich.jpg'\n  },\n  {\n    name: 'Monica Hall',\n    url: './img/monica.jpg'\n  },\n  {\n    name: 'Jared Dunn',\n    url: './img/jared.jpg'\n  },\n  {\n    name: 'Dinesh Chugtai',\n    url: './img/dinesh.jpg'\n  }\n]\nconsole.log('hello world')\nconst alreadyRemoved = []\nlet charactersState = db // This fixes issues with updating characters state forcing it to use the current state and not the state that was active when the card was created.\n\nfunction Advanced () {\n  const [characters, setCharacters] = useState(db)\n  const [lastDirection, setLastDirection] = useState()\n\n  const childRefs = useMemo(() => Array(db.length).fill(0).map(i => React.createRef()), [])\n\n  const swiped = (direction, nameToDelete) => {\n    console.log('Tested: ' + nameToDelete)\n    setLastDirection(direction)\n    alreadyRemoved.push(nameToDelete)\n  }\n\n  const outOfFrame = (name) => {\n    console.log(name + ' left the screen!')\n    charactersState = charactersState.filter(character => character.name !== name)\n    setCharacters(charactersState)\n  }\n\n  var swipedRight = []\n  const swipe = (dir) => {\n    console.log(dir)\n    const cardsLeft = characters.filter(person => !alreadyRemoved.includes(person.name))\n    if (cardsLeft.length) {\n      if(dir = 'right'){\n        // swipedRight.push(person.name)\n        var length = swipedRight.length\n        console.log(swipedRight)\n      }\n      const toBeRemoved = cardsLeft[cardsLeft.length - 1].name // Find the card object to be removed\n      const index = db.map(person => person.name).indexOf(toBeRemoved) // Find the index of which to make the reference to\n      alreadyRemoved.push(toBeRemoved) // Make sure the next card gets removed next time if this card do not have time to exit the screen\n      childRefs[index].current.swipe(dir) // Swipe the card!\n    }\n  }\n\n  return (\n    <div>\n      <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\n      <link href='https://fonts.googleapis.com/css?family=Alatsi&display=swap' rel='stylesheet' />\n      <h1>React Tinder Card</h1>\n      <div className='cardContainer'>\n        {characters.map((character, index) =>\n          <TinderCard ref={childRefs[index]} className='swipe' key={character.name} onSwipe={(dir) => swiped(dir, character.name)} onCardLeftScreen={() => outOfFrame(character.name)}>\n            <div style={{ backgroundImage: 'url(' + character.url + ')' }} className='card'>\n              <h3>{character.name}</h3>\n            </div>\n          </TinderCard>\n        )}\n      </div>\n      <div className='buttons'>\n        <button onClick={() => swipe('left')}>Swipe left!</button>\n        <button onClick={() => swipe('right')}>Swipe right!</button>\n      </div>\n      {lastDirection ? <h2 key={lastDirection} className='infoText'>You swiped {lastDirection}</h2> : <h2 className='infoText'>Swipe a card or press a button to get started!</h2>}\n    </div>\n  )\n}\n\nexport default Advanced","/Users/aramaswamy/Desktop/my-app/src/index.js",[],["43","44"],"/Users/aramaswamy/Desktop/my-app/src/examples/Simple.js",["45","46","47","48","49","50","51","52"],"/Users/aramaswamy/Desktop/my-app/src/serviceWorker.js",[],["53","54"],{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":25},{"ruleId":"55","severity":1,"message":"59","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":14},{"ruleId":"55","severity":1,"message":"60","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":16},{"ruleId":"55","severity":1,"message":"61","line":5,"column":8,"nodeType":"57","messageId":"58","endLine":5,"endColumn":16},{"ruleId":"62","severity":1,"message":"63","line":33,"column":23,"nodeType":"64","endLine":33,"endColumn":43},{"ruleId":"65","severity":1,"message":"66","line":33,"column":23,"nodeType":"64","endLine":33,"endColumn":43},{"ruleId":"62","severity":1,"message":"63","line":46,"column":33,"nodeType":"64","endLine":46,"endColumn":59},{"ruleId":"65","severity":1,"message":"66","line":46,"column":33,"nodeType":"64","endLine":46,"endColumn":59},{"ruleId":"62","severity":1,"message":"63","line":52,"column":35,"nodeType":"64","endLine":52,"endColumn":61},{"ruleId":"65","severity":1,"message":"66","line":52,"column":35,"nodeType":"64","endLine":52,"endColumn":61},{"ruleId":"62","severity":1,"message":"63","line":58,"column":35,"nodeType":"64","endLine":58,"endColumn":59},{"ruleId":"65","severity":1,"message":"66","line":58,"column":35,"nodeType":"64","endLine":58,"endColumn":59},{"ruleId":"62","severity":1,"message":"63","line":64,"column":35,"nodeType":"64","endLine":64,"endColumn":59},{"ruleId":"65","severity":1,"message":"66","line":64,"column":35,"nodeType":"64","endLine":64,"endColumn":59},{"ruleId":"62","severity":1,"message":"63","line":70,"column":38,"nodeType":"64","endLine":70,"endColumn":62},{"ruleId":"65","severity":1,"message":"66","line":70,"column":38,"nodeType":"64","endLine":70,"endColumn":62},{"ruleId":"67","severity":1,"message":"68","line":54,"column":10,"nodeType":"69","messageId":"70","endLine":54,"endColumn":23},{"ruleId":"55","severity":1,"message":"71","line":56,"column":13,"nodeType":"57","messageId":"58","endLine":56,"endColumn":19},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"55","severity":1,"message":"76","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":16},{"ruleId":"77","severity":1,"message":"78","line":36,"column":15,"nodeType":"57","messageId":"79","endLine":36,"endColumn":24},{"ruleId":"80","severity":1,"message":"81","line":75,"column":6,"nodeType":"82","endLine":75,"endColumn":25,"suggestions":"83"},{"ruleId":"55","severity":1,"message":"84","line":114,"column":11,"nodeType":"57","messageId":"58","endLine":114,"endColumn":20},{"ruleId":"85","severity":1,"message":"86","line":136,"column":29,"nodeType":"87","messageId":"88","endLine":136,"endColumn":31},{"ruleId":"89","severity":1,"message":"90","line":184,"column":18,"nodeType":"57","messageId":"91","endLine":184,"endColumn":19},{"ruleId":"55","severity":1,"message":"84","line":191,"column":13,"nodeType":"57","messageId":"58","endLine":191,"endColumn":22},{"ruleId":"92","severity":1,"message":"93","line":293,"column":9,"nodeType":"64","endLine":293,"endColumn":36},{"ruleId":"72","replacedBy":"94"},{"ruleId":"74","replacedBy":"95"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Carousel' is defined but never used.","'Advanced' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'length' is assigned a value but never used.","no-native-reassign",["96"],"no-negated-in-lhs",["97"],"'ReactDOM' is defined but never used.","no-use-before-define","'temparray' was used before it was defined.","usedBeforeDefined","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'temparray'. Either include it or remove the dependency array.","ArrayExpression",["98"],"'modaltext' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","redeclared","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["96"],["97"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},"Update the dependencies array to be: [searchcombination, temparray]",{"range":"101","text":"102"},[1992,2011],"[searchcombination, temparray]"]